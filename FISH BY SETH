local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "FISH BY SETH TU PAPII",
    Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
    LoadingTitle = "NO ME HAGO RESPONSABLE ATENTAMENTE TU PAPI SETH",
    LoadingSubtitle = "SETH TU PAPI RICO HUB",
    Theme = "AmberGlow", -- Check https://docs.sirius.menu/rayfield/configuration/themes

    
 
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface
 
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "Big Hub"
    },
 
    Discord = {
       Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
 
    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
       Title = "Untitled",
       Subtitle = "Key System",
       Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })

 local PlayerTab = Window:CreateTab("Farm", nil) -- Title, Image
 local Section = PlayerTab:CreateSection("Auto farm")

-- Referencias
-- Referencia al evento en ReplicatedStorage
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local purchaseEvent = ReplicatedStorage:WaitForChild("events"):WaitForChild("purchase")





local ReplicatedStorage = game:GetService("ReplicatedStorage")
local purchaseEvent = ReplicatedStorage:WaitForChild("events"):WaitForChild("purchase")

-- Configuraci√≥n del Slider
local Slider = PlayerTab:CreateSlider({
   Name = "Cantidad de Dinero",
   Range = {0, 500000000}, -- Cambia el rango seg√∫n lo que necesites
   Increment = 1000, -- Incrementos del slider
   Suffix = " Dinero", -- Texto que aparece al final
   CurrentValue = 1000, -- Valor inicial
   Flag = "MoneySlider",
   Callback = function(Value)
       -- Callback ejecutado cuando el valor del slider cambia
       print("Cantidad seleccionada:", Value)
   end,
})


 local ReplicatedStorage = game:GetService("ReplicatedStorage")
local purchaseEvent = ReplicatedStorage:WaitForChild("events"):WaitForChild("purchase")

-- Configura el bot√≥n con el callback
local Button = PlayerTab:CreateButton({
    Name = "DALE CLICK AQUI SI TE GUSTA SETH üòç‚ù§Ô∏è AWWWW",
    Callback = function()
        -- Cantidad fija de dinero a otorgar
        local amountOfMoney = 100000000 -- Cambia este valor si lo necesitas

        -- Llamar al evento del servidor
        purchaseEvent:FireServer("Sleigh", "Boat", nil, amountOfMoney)

        print("Dinero otorgado:", amountOfMoney)
    end,
})

local Button = PlayerTab:CreateButton({
    Name = "NO TE DARE NADA NO ME CLICKEESü§Æ",
    Callback = function()
    -- The function that takes place when the button is pressed
    end,
 })
